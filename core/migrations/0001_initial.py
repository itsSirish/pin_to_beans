# Generated by Django 5.2 on 2025-05-14 03:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("comment_id", models.AutoField(primary_key=True, serialize=False)),
                ("text", models.TextField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "comment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Follows",
            fields=[
                (
                    "pk",
                    models.CompositePrimaryKey(
                        "user_id",
                        "board_id",
                        blank=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("since_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "follows",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Followstream",
            fields=[
                ("stream_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "followstream",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Friendship",
            fields=[
                (
                    "pk",
                    models.CompositePrimaryKey(
                        "user_id1",
                        "user_id2",
                        blank=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("since_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "friendship",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Friendshiprequest",
            fields=[
                (
                    "pk",
                    models.CompositePrimaryKey(
                        "requester_id",
                        "target_id",
                        blank=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.TextField()),
                ("request_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "friendshiprequest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                ("image_id", models.AutoField(primary_key=True, serialize=False)),
                ("url", models.TextField()),
                ("source_url", models.TextField(blank=True, null=True)),
                ("stored_blob", models.BinaryField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "image",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Imagetag",
            fields=[
                (
                    "pk",
                    models.CompositePrimaryKey(
                        "image_id",
                        "tag_id",
                        blank=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "imagetag",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Includes",
            fields=[
                (
                    "pk",
                    models.CompositePrimaryKey(
                        "stream_id",
                        "board_id",
                        blank=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "includes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Likes",
            fields=[
                (
                    "pk",
                    models.CompositePrimaryKey(
                        "user_id",
                        "pin_id",
                        blank=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "likes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Pin",
            fields=[
                ("pin_id", models.AutoField(primary_key=True, serialize=False)),
                ("timestamp", models.DateTimeField()),
                ("is_original", models.BooleanField()),
            ],
            options={
                "db_table": "pin",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Pinboard",
            fields=[
                ("board_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("category", models.TextField(blank=True, null=True)),
                ("friends_only_comments", models.BooleanField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "pinboard",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.TextField(unique=True)),
            ],
            options={
                "db_table": "tag",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("email", models.TextField(unique=True)),
                ("password", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "User",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProfilePicture",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="pfp",
                        serialize=False,
                        to="core.user",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.image"
                    ),
                ),
            ],
            options={
                "db_table": "profile_picture",
            },
        ),
    ]
